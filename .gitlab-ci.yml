stages:
  - test
  - build

.base:
  image: golang:latest
  tags:
    - linux-amd64
  before_script:
    - go install github.com/bufbuild/buf/cmd/buf@latest
lint:
  extends: .base
  stage: test
  allow_failure: true
  script:
    - buf lint
    
format:
  extends: .base
  stage: test
  script:
    - d=$(buf format -d)
    - if [ -n "$d" ]; then echo "$d"; exit 1; fi

breaking_changes:
  extends: .base
  stage: test
  allow_failure: true
  only:
    - master
  script:
    - buf breaking --against '.git#branch=main,ref=HEAD~1'

check-npm-packages-version:
  stage: test
  image: node:latest
  only:
    - tags
  script:
    - |
      TCN_VERSION=$(node -p "require('./package.json').version")
      TCN_CONNECT_ES_VERSION=$(node -p "require('./tcnapi-connect-es/package.json').version")
      TCN_GRPC_WEB_VERSION=$(node -p "require('./tcnapi-grpc-web/package.json').version")
      VERSION=$(echo $CI_COMMIT_TAG | sed 's/v//g')
      if [ "$TCN_VERSION" != "$VERSION" ]; then echo "Version mismatch root package: $TCN_VERSION != $VERSION"; exit 1; fi
      if [ "$TCN_CONNECT_ES_VERSION" != "$VERSION" ]; then echo "Version mismatch tcnapi-connect-es package: $TCN_CONNECT_ES_VERSION != $VERSION"; exit 1; fi
      if [ "$TCN_GRPC_WEB_VERSION" != "$VERSION" ]; then echo "Version mismatch tcnapi-grpc-web package: $TCN_GRPC_WEB_VERSION != $VERSION"; exit 1; fi

build:outpb: 
  extends: .base
  stage: build
  script:
    - buf build -o out.pb
  artifacts:
    paths:
      - out.pb
    when: on_success
    expire_in: "1 hour"

build:go:
  extends: .base
  stage: build
  only:
    - master
  script:
    - git clone "https://github.com/tcncloud/api-go.git" "api-go"
    - buf generate --template buf.go.gen.yaml 
    - cd api-go
    - git config user.name "Florin Stan"
    - git config user.email "597933+namtzigla@users.noreply.github.com"
    - git add .
    - (git commit -a -m "$CI_COMMIT_MESSAGE" && git push --set-upstream https://namtzigla:$GITHUB_API_GO_TOKEN@github.com/tcncloud/api-go) || echo "nothing to commit"
    - cd ..
    - echo $BUF_TOKEN | buf registry login --token-stdin --username florin-stan
    - buf push 

build:go:tags:
  extends: .base
  stage: build
  only:
    - tags
  script:
    - git clone "https://github.com/tcncloud/api-go.git" "api-go"
    - buf generate --template buf.go.gen.yaml 
    - cd api-go
    - git config user.name "Florin Stan"
    - git config user.email "597933+namtzigla@users.noreply.github.com"
    - git add .
    - (git commit -a -m "$CI_COMMIT_MESSAGE" && git push --set-upstream https://namtzigla:$GITHUB_API_GO_TOKEN@github.com/tcncloud/api-go) || echo "nothing to commit"
    - git tag -a "$CI_COMMIT_TAG" -m "$CI_COMMIT_TAG"
    - git push --tags --set-upstream https://namtzigla:$GITHUB_API_GO_TOKEN@github.com/tcncloud/api-go 
    - cd ..
    - echo $BUF_TOKEN | buf registry login  --token-stdin --username florin-stan
    - buf push -t "$CI_COMMIT_TAG"
    