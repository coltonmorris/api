syntax = "proto3";

package api.v1alpha1.soundboard;

import "api/v1alpha1/org/soundboard/entities.proto";
import "google/api/annotations.proto";

option go_package = "github.com/tcncloud/api/v1alpha1/org/soundboard;soundboard";
option java_package = "com.tcn.matrix.api.v1alpha1.org.soundboard";

service Soundboard {
  // GetSoundboardFile streams back segments of the audio file stored in rec
  // corresponding to the provided soundboard id and org id.
  rpc GetSoundboardFile(GetSoundboardFileReq) returns (stream GetSoundboardFileRes) {
    option (google.api.http).post = "/api/v1alpha1/org/soundboard/getfile";
    option (google.api.http).body = "*";
  }

  // CreateSoundboard takes in a stream of metadata and audio file segments.
  // The first expected message should contain SoundboardDetails, then following
  // messages will be chunks of audio file data, which is then aggregated and put
  // into rec. The generated soundboard id is returned.
  rpc CreateSoundboard(CreateSoundboardReq) returns (CreateSoundboardRes) {
    option (google.api.http).post = "/api/v1alpha1/org/soundboard/create";
    option (google.api.http).body = "*";
  }

  // ListSoundboards returns all of the metadata for soundboards corresponding
  // corresponding to a given org id.
  rpc ListSoundboards(ListSoundboardsReq) returns (ListSoundboardsRes) {
    option (google.api.http).post = "/api/v1alpha1/org/soundboard/list";
    option (google.api.http).body = "*";
  }

  // UpdateSondboard updates a soundboard's metadata in the soundboard table.
  rpc UpdateSoundboard(UpdateSoundboardReq) returns (UpdateSoundboardRes) {
    option (google.api.http).post = "/api/v1alpha1/org/soundboard/update";
    option (google.api.http).body = "*";
  }

  // DeleteSondboard deletes a soundboard's metadata from the soundboard table.
  rpc DeleteSoundboard(DeleteSoundboardReq) returns (DeleteSoundboardRes) {
    option (google.api.http).post = "/api/v1alpha1/org/soundboard/delete";
    option (google.api.http).body = "*";
  }
}
