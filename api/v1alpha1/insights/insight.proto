syntax = "proto3";

package api.v1alpha1.insights;

import "api/commons/insights.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/tcncloud/api/v1alpha1/insights;insights";
option java_package = "com.tcn.matrix.api.v1alpha1.insights";

// Insight is a data handling entity used to process data
// Insight can represent an object that belongs to the user
// Insight can represent an object inside the common lib
message Insight {
  int64 insight_id = 2 [jstype = JS_STRING]; // Required - unique insight snowflake id
  string name = 3; // Required - name of the insight
  string description = 4; // Required - description of the insight
  api.commons.InsightType insight_type = 5; // Required - enum type used to deserialize body
  uint32 insight_version = 6; // Required - version of the insight
  string body = 7; // Required - serialized json of the insight body
  api.commons.InsightPermissionType insight_permission_type = 8; // Required - enum type used to deserialize body
}

// CreateInsightRequest is the request to create an insight.
message CreateInsightRequest {
  Insight insight = 1; // Required - insight to be created
}

// CreateInsightResponse contains the Insight that was created.
message CreateInsightResponse {
  Insight insight = 1; // Created entity
}

// ListInsightsRequest is the request to list insights.
message ListInsightsRequest {
  repeated api.commons.InsightPermissionType insight_permission_types = 2; // Optional - list of insight permission types to filter by
}

// ListInsightsResponse contains the Insights that were listed.
message ListInsightsResponse {
  repeated Insight insights = 1; // Requested insights
}

// UpdateInsightRequest is the request to update an insight.
message UpdateInsightRequest {
  Insight insight = 1; // Required - insight to be updated
  google.protobuf.FieldMask update_mask = 2; // Required - mask of fields to update
}

// UpdateInsightResponse contains the Insight that was updated.
message UpdateInsightResponse {
  Insight insight = 1; // Updated entity
}

// DeleteInsightRequest is the request to delete an insight.
message DeleteInsightRequest {
  int64 insight_id = 1 [jstype = JS_STRING]; // Required - id of insight to delete
}

// DeleteInsightResponse contains the Insight that was deleted.
message DeleteInsightResponse {
  Insight insight = 1; // Deleted entity
}

// GetInsightRequest is the request to get an insight.
message GetInsightRequest {
  int64 insight_id = 1 [jstype = JS_STRING]; // Required - id of insight to get
}

// GetInsightResponse contains the Insight that was retrieved.
message GetInsightResponse {
  Insight insight = 1; // Requested entity
}

// GetVfsSchemaRequest is request to get vfs schema using alias
message GetVfsSchemaRequest {
  string alias_name = 1; // Required - alias name of vfs to get schema for
}

// GetVfsSchemaResponse is response with vfs schema
message GetVfsSchemaResponse {
  // Field represents a column in a dataframe
  message Field {
    string column_name = 1; // name of the column
    api.commons.InsightVfsSchemaType column_type = 2; // internal enumerated column type
    string column_description = 3; // description of the column - optional may not always be present
  }
  repeated Field fields = 1; // array of fields
  string vfs_description = 2; // description of the vfs - optional may not always be present
}

// ListVfsesRequest is request to list vfses
message ListVfsesRequest {}

// ListVfsesResponse is response with vfs aliases
message ListVfsesResponse {
  repeated string aliases = 1; // Array of vfs alias names
}
