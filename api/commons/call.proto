syntax = "proto3";

package api.commons;

import "api/commons/results.proto";
import "google/protobuf/timestamp.proto";

enum CallStatus {
  CALL_UNKNOWN = 0;
  CALL_SCHEDULED = 3100; // "CALL_SCHEDULED", "Call is currently waiting for scheduler"),
  CALL_RUNNING = 3200; // "CALL_RUNNING", "Call is currently being executed"),
  CALL_COMPLETED = 3300; // "CALL_COMPLTED", "Call has been executed"),
}

message SimpleCallData {
  int64 task_sid = 1;
  int64 call_sid = 2;
  int64 task_group_sid = 3;
  int64 client_sid = 4;
  int64 country_sid = 5;
  int64 agent_sid = 6;
  int64 start_time = 7;

  string caller_id = 8;
  string phone_number = 9;
  string country_code = 10;

  int32 delivery_duration = 11;
  int32 link_call_duration = 12;

  CallResult result = 13;
  int32 sip_code = 14;

  bool do_record = 15;
  string recording_file_name = 16;

  // WARNING: don't delete these fields randomly, the frontend checks the inverse
  // so reserved fields will trigger a false positive for the scrub. Most likely you
  // will need to hardcode the value to True in matrix-api (like custom calling rules)
  bool is_dial_validation_ok = 17;
  bool is_time_zone_scrub_ok = 18;
  bool is_cell_phone_scrub_ok = 19;
  bool is_custom_calling_rules_scrub_ok = 20;
  bool is_dncl_scrub_ok = 21;

  bool use_global_time_zone_scrub = 22;
  bool do_cell_phone_scrub = 23;
  reserved 24; // do_custom_calling_rules_scrub
  bool do_dncl_scrub = 25;

  string call_data_type = 26;

  reserved 27; // custom calling rules

  string caller_id_country_code = 28;
  int64 caller_id_country_sid = 29;
  string zip_code = 30;
  bool is_preview_by_record = 31;
  string rule_set_name = 32;
  bool is_natural_compliance_ok = 33;

  repeated SimpleKeyValue simple_meta_data = 34;

  repeated SimpleKeyValue simple_result_meta_data = 35;
}

message SimpleKeyValue {
  string key = 1;
  string value = 2;
}

message SimpleRecordData {
  int64 task_sid = 1;
  int64 task_group_sid = 2;
  int64 agent_sid = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp stop_time = 5;
}
