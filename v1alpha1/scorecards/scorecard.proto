syntax = "proto3";

package v1alpha1.scorecards;

option java_package="com.tcn.api.v1alpha1.scorecards";
option go_package="github.com/tcncloud/api/v1alpha1.scorecards;scorecards";



import "google/protobuf/field_mask.proto";
import "commons/scorecards.proto";

// CreateScorecardRequest is the request to create a scorecard.
message CreateScorecardRequest {
    commons.Scorecard scorecard = 1;
}

// CreateScorecardResponse contains the scorecard that was created.
message CreateScorecardResponse {
    commons.Scorecard scorecard = 1;
}

// ListScorecardsRequest is the request for listing scorecards by certain criteria.
message ListScorecardsRequest {
    repeated string author_ids = 2;     // Optional. Results include any of the authors
    repeated int64 category_ids = 3;    // Optional. Results include any of the categories listed.
    repeated commons.ScorecardState states = 4; // Optional. Results include scorecard in any of the given states.

    // TODO: Spec out the phrase/keyword option(s)
}

// ListScorecardsResponse includes a list of scorecards.
message ListScorecardsResponse {
    repeated commons.Scorecard scorecards = 1;
}

// UpdateScorecardRequest is the request for updating a scorecard.
message UpdateScorecardRequest {
    // Required.
    commons.Scorecard scorecard = 1;

    // Required. Valid paths: [title, description, pass_score, score_type,
    // evaluation_type, allow_feedback, distribute_weights, category.category_id].
    // To update Sections, use *Section and *ScorecardQuestion methods.
    google.protobuf.FieldMask update_mask = 2;
}

// UpdateScorecardResponse returns the updated scorecard.
message UpdateScorecardResponse {
    commons.Scorecard scorecard = 1;
}

// DeleteScorecardRequest is the request to delete a scorecard.
message DeleteScorecardRequest {
    int64 scorecard_id = 2; // Required.
}

// DeleteScorecardResponse contains the deleted scorecard.
message DeleteScorecardResponse {
    commons.Scorecard scorecard = 1;
}

// GetScorecardRequest is the request for getting a scorecard.
message GetScorecardRequest {
    int64 scorecard_id = 2; // Required.
    bool use_default = 3; // if true, will ignore id and return default
}

// GetScorecardResponse contains a scorecard.
message GetScorecardResponse {
    commons.Scorecard scorecard = 1;
}
